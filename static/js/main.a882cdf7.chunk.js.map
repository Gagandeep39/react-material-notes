{"version":3,"sources":["pages/Notes.js","pages/Create.js","App.js","index.js"],"names":["Notes","useState","notes","setNotes","useEffect","fetch","then","res","json","data","Container","Grid","container","map","note","item","xs","md","lg","Paper","title","id","useStyles","makeStyles","btn","fontSize","backgroundColor","textDecoration","marginBottom","field","marginTop","display","Create","classes","setTitle","details","setDetails","titleError","setTitleError","detailsError","setDetailsError","category","setCategory","history","useHistory","Typography","variant","color","component","gutterBottom","noValidate","autoComplete","onSubmit","e","preventDefault","console","log","method","headers","body","JSON","stringify","push","TextField","onChange","target","value","label","required","fullWidth","className","error","multiline","rows","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","Button","type","startIcon","KeyboardArrowRight","theme","createMuiTheme","palette","primary","main","secondary","purple","typography","fontFamily","fontWeightLight","fontWeightBold","fontWeightRegular","fontWeightMedium","App","ThemeProvider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a882cdf7.chunk.js","sourcesContent":["import { Container, Grid, Paper } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nconst Notes = () => {\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/notes')\n      .then((res) => res.json())\n      .then((data) => setNotes(data));\n  }, []);\n\n  return (\n    <Container>\n      <Grid container>\n        {notes.map((note) => (\n          <Grid item xs={12} md={6} lg={4} key={note.id}>\n            <Paper>{note.title} </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Notes;\n","import {\n  Button,\n  Container,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  makeStyles,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport { KeyboardArrowRight } from '@material-ui/icons';\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\n\nconst useStyles = makeStyles({\n  btn: {\n    fontSize: 90,\n    backgroundColor: 'violet',\n    '&:hover': {\n      backgroundColor: 'blue',\n    },\n  },\n  title: {\n    textDecoration: 'underline',\n    marginBottom: 20,\n  },\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block',\n  },\n});\n\nconst Create = () => {\n  const classes = useStyles();\n  const [title, setTitle] = useState('');\n  const [details, setDetails] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const [detailsError, setDetailsError] = useState(false);\n  const [category, setCategory] = useState('todos');\n  const history = useHistory();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Resset Error\n    setTitleError(false);\n    setDetailsError(false);\n\n    // Check for validation\n    if (!title) setTitleError(true);\n    if (!details) setDetailsError(true);\n\n    // Display with ata is valid\n    if (title && details) {\n      console.log(title, details, category);\n      fetch('http://localhost:3001/notes', {\n        method: 'POST',\n        headers: { 'Content-type': 'application/json' },\n        body: JSON.stringify({ title, details, category }),\n      }).then(() => history.push('/'));\n    }\n  };\n\n  return (\n    <Container>\n      <Typography\n        variant=\"h6\"\n        color=\"textSecondary\"\n        component=\"h2\"\n        gutterBottom\n      >\n        Create a new Note\n      </Typography>\n\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\n        <TextField\n          onChange={(e) => setTitle(e.target.value)}\n          label=\"Title\"\n          variant=\"outlined\"\n          required\n          fullWidth\n          color=\"secondary\"\n          className={classes.field}\n          error={titleError}\n        />\n        <TextField\n          onChange={(e) => setDetails(e.target.value)}\n          label=\"Details\"\n          variant=\"outlined\"\n          required\n          fullWidth\n          multiline\n          rows=\"4\"\n          color=\"secondary\"\n          className={classes.field}\n          error={detailsError}\n        />\n\n        <FormControl className={classes.field}>\n          <FormLabel>Notes Category</FormLabel>\n          <RadioGroup\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n          >\n            <FormControlLabel\n              value=\"money\"\n              control={<Radio />}\n              label=\"Money\"\n            ></FormControlLabel>\n\n            <FormControlLabel\n              value=\"todos\"\n              control={<Radio />}\n              label=\"Todo\"\n            ></FormControlLabel>\n\n            <FormControlLabel\n              value=\"reminders\"\n              control={<Radio />}\n              label=\"Reminder\"\n            ></FormControlLabel>\n\n            <FormControlLabel\n              value=\"work\"\n              control={<Radio />}\n              label=\"Work\"\n            ></FormControlLabel>\n          </RadioGroup>\n        </FormControl>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={<KeyboardArrowRight />}\n        >\n          Submit\n        </Button>\n      </form>\n    </Container>\n  );\n};\n\nexport default Create;\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Notes from './pages/Notes';\nimport Create from './pages/Create';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport { purple } from '@material-ui/core/colors';\n\n// Refer https://material-ui.com/customization/default-theme/\n// for prperties that can be overriden\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#fefefe',\n    },\n    // Overrides main. light, dark color\n    secondary: purple,\n  },\n  // Import the font in Index.css first\n  typography: {\n    fontFamily: 'Quicksand',\n    // Optional\n    fontWeightLight: 400,\n    fontWeightBold: 700,\n    fontWeightRegular: 500,\n    fontWeightMedium: 600,\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Notes />\n          </Route>\n          <Route path=\"/create\">\n            <Create />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}